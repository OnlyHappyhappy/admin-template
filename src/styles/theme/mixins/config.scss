$namespace: 'el';
$element-separator: '__';
$modifier-separator: '--';
$state-prefix: 'is-';


$namespaceL: 'pi';
$element-separatorL: '__';
$modifier-separatorL: '--';
$state-prefixL: 'is-';



@mixin Lb($block) {
  $B: $namespaceL+'-'+$block !global;

  .#{$B} {
    @content;
  }
}

@mixin Le($element) {
  $E: $element !global;
  $selector: &;
  $currentSelector: "";

  @each $unit in $element {
    $currentSelector: #{$currentSelector + "." + $B + $element-separatorL + $unit + ","};
  }

  @if hitAllSpecialNestRule($selector) {
    @at-root {
      #{$selector} {
        #{$currentSelector} {
          @content;
        }
      }
    }
  }

  @else {
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
}

@mixin Lm($modifier) {
  $selector: &;
  $currentSelector: "";

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separatorL + $unit + ","};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}



@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}
